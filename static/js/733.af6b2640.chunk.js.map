{"version":3,"file":"static/js/733.af6b2640.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/movie-details-page.module.css?2076","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-details-page_container__fhQcU\",\"button\":\"movie-details-page_button__bOgoc\",\"icon\":\"movie-details-page_icon__eb+SQ\",\"block\":\"movie-details-page_block__nq5vP\",\"data\":\"movie-details-page_data__Dh1bI\",\"title\":\"movie-details-page_title__lvyVs\",\"poster\":\"movie-details-page_poster__D1-+q\",\"info\":\"movie-details-page_info__mrhcR\",\"link\":\"movie-details-page_link__Chm7G\"};","import { useState, useEffect, useCallback } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovieById } from '../../shared/services/movies-api';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport defaultPoster from '../../shared/images/movie-poster.jpg';\nimport styles from './movie-details-page.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [poster, setPoster] = useState('');\n  const [genres, setGenres] = useState([]);\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async id => {\n      try {\n        const recievedMovie = await getMovieById(id);\n        setMovie(recievedMovie);\n        setPoster(\n          recievedMovie.poster_path\n            ? `https://image.tmdb.org/t/p/w300/${recievedMovie.poster_path}`\n            : defaultPoster\n        );\n        setGenres(recievedMovie.genres);\n      } catch ({ response }) {\n        Notify.failure(response.data.status_message);\n      }\n    };\n    fetchMovie(id);\n  }, [id]);\n\n  const goBack = useCallback(() => {\n    navigate(from);\n  }, [navigate, from]);\n\n  const userScore = Number(movie.vote_average * 10);\n  const genresList = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <button type=\"button\" onClick={goBack} className={styles.button}>\n          <IoIosArrowRoundBack className={styles.icon} />\n        </button>\n\n        <div className={styles.block}>\n          <img src={poster} alt={movie.title} className={styles.poster} />\n\n          <div className={styles.data}>\n            <h3 className={styles.title}>\n              {movie.title} (\n              {movie.release_date ? movie.release_date.substr(0, 4) : ' '})\n            </h3>\n\n            <p className={styles.info}>User Score: {Math.round(userScore)}%</p>\n\n            <h4 className={styles.title}>Overview</h4>\n            <p className={styles.info}>{movie.overview}</p>\n\n            <h4 className={styles.title}>Genres</h4>\n            <ul className={styles.info}>{genresList}</ul>\n\n            <h4 className={styles.title}>Addition information</h4>\n\n            <Link to=\"cast\" state={{ from }} className={styles.link}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" state={{ from }} className={styles.link}>\n              Reviews\n            </Link>\n          </div>\n        </div>\n        <div>\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst KEY = 'f382609d477ce9aec3e1d07c01aab879';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const getReviewsById = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["useState","movie","setMovie","poster","setPoster","genres","setGenres","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieById","recievedMovie","poster_path","defaultPoster","response","Notify","data","status_message","goBack","useCallback","userScore","Number","vote_average","genresList","map","name","className","styles","type","onClick","src","alt","title","release_date","substr","Math","round","overview","to","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getMoviesByQuery","query","page","getCastById","cast","getReviewsById","results"],"sourceRoot":""}