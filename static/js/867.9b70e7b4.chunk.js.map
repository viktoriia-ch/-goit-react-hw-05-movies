{"version":3,"file":"static/js/867.9b70e7b4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MoviesSearch/MoviesSearchForm/movies-search-form.module.css?ace3","modules/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","modules/MoviesSearch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx","webpack://react-homework-template/./src/shared/components/MoviesList/movies-list.module.css?19ef","shared/components/MoviesList/MoviesList.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movies-search-form_container__eEJ1B\",\"form\":\"movies-search-form_form__QkZ9F\",\"input\":\"movies-search-form_input__s5QWc\",\"button\":\"movies-search-form_button__uDFeG\",\"icon\":\"movies-search-form_icon__1e85T\"};","import { useState } from 'react';\nimport { IoIosSearch } from 'react-icons/io';\nimport PropTypes from 'prop-types';\nimport styles from './movies-search-form.module.css';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setSearch(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(search);\n  };\n\n  return (\n    <div className={styles.container}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          placeholder=\"Enter name of movie...\"\n          onChange={handleChange}\n          className={styles.input}\n        />\n        <button type=\"submit\" className={styles.button}>\n          <IoIosSearch className={styles.icon} />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MoviesSearchForm;\n\nMoviesSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport MoviesSearchForm from './MoviesSearchForm/MoviesSearchForm';\nimport { getMoviesByQuery } from '../../shared/services/movies-api';\nimport MoviesList from 'shared/components/MoviesList/MoviesList';\n\nconst MoviesSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const { results } = await getMoviesByQuery(search);\n        setMovies(results);\n      } catch ({ response }) {\n        Notify.failure(response.data.status_message);\n      }\n    };\n    fetchMovies();\n  }, [search]);\n\n  const getMovies = search => {\n    setSearchParams({ search });\n  };\n\n  return (\n    <>\n      <MoviesSearchForm onSubmit={getMovies} />\n      <MoviesList items={movies} />\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import MoviesSearch from '../../modules/MoviesSearch/MoviesSearch';\n\nconst MoviesPage = () => {\n  return <MoviesSearch />;\n};\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies-list_list__m+Us7\",\"item\":\"movies-list_item__B8oPM\",\"link\":\"movies-list_link__ML-sK\",\"image\":\"movies-list_image__BiAYH\",\"title\":\"movies-list_title__LFQn7\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './movies-list.module.css';\nimport defaultPoster from '../../images/movie-poster.jpg';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const setImages = poster_path => {\n    return poster_path\n      ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n      : defaultPoster;\n  };\n\n  const elements = items.map(({ id, title, poster_path }) => (\n    <li key={id} className={styles.item}>\n      <Link\n        to={`/movies/${id}`}\n        className={styles.link}\n        state={{ from: location }}\n      >\n        <img\n          src={setImages(poster_path)}\n          alt={title}\n          className={styles.image}\n        />\n        <p className={styles.title}>{title}</p>\n      </Link>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.array,\n};\n","import axios from 'axios';\n\nconst KEY = 'f382609d477ce9aec3e1d07c01aab879';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const getReviewsById = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["onSubmit","useState","search","setSearch","className","styles","event","preventDefault","name","type","placeholder","onChange","value","target","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getMoviesByQuery","results","response","Notify","data","status_message","MoviesList","items","location","useLocation","setImages","poster_path","defaultPoster","elements","map","id","title","to","state","from","src","alt","defaultProps","instance","axios","baseURL","params","api_key","language","getTrendingMovies","getMovieById","query","page","getCastById","cast","getReviewsById"],"sourceRoot":""}