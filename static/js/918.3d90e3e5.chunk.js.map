{"version":3,"file":"static/js/918.3d90e3e5.chunk.js","mappings":"gRACA,GAAgB,UAAY,6BAA6B,KAAO,wBAAwB,KAAO,wBAAwB,MAAQ,0B,SCgD/H,EA1CiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKC,EAAAA,EAAAA,IAAYJ,GAFjB,OAERK,EAFQ,OAGdN,EAAQM,GAHM,gDAILC,EAJK,KAILA,SACTC,EAAAA,OAAAA,QAAeD,EAASD,KAAKG,gBALf,yDAAH,qDAQfL,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAQX,EAAKY,KAAI,YAA4C,IAAzCV,EAAwC,EAAxCA,GAAIW,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAChD,OACE,gBAAaC,UAAWC,EAAAA,KAAxB,WACE,gBACEC,IACEL,EAAY,0CAC2BA,GACnCM,EAENC,IAAKN,EACLE,UAAWC,EAAAA,SAEb,kCAAUH,MACV,uCAAeC,OAXRb,EAcZ,IAED,OACE,iBAAKc,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,oCACA,eAAID,UAAWC,EAAAA,KAAf,SAA6BN,MAGlC,C,wLC5CKU,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAJQ,mCAKRC,SAAU,WAIDC,EAAiB,mCAAG,sGACRN,EAASO,IAAI,wBADL,uBACvBrB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBsB,EAAY,mCAAG,WAAM3B,GAAN,yFACHmB,EAASO,IAAT,iBAAuB1B,IADpB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZuB,EAAgB,mCAAG,WAAMC,GAAN,yFACPV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAAA,EACAC,KAAM,KAJoB,uBACtBzB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBD,EAAW,mCAAG,WAAMJ,GAAN,yFAGfmB,EAASO,IAAT,iBAAuB1B,EAAvB,aAHe,uBAEfF,EAFe,EAEvBO,KAAQP,KAFe,kBAIlBA,GAJkB,2CAAH,sDAOXiC,EAAc,mCAAG,WAAM/B,GAAN,yFAGlBmB,EAASO,IAAT,iBAAuB1B,EAAvB,aAHkB,uBAElBgC,EAFkB,EAE1B3B,KAAQ2B,QAFkB,kBAIrBA,GAJqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/cast-page.module.css?5ad3","pages/CastPage/CastPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"cast-page_container__AoTym\",\"list\":\"cast-page_list__URYkV\",\"item\":\"cast-page_item__LxX9c\",\"image\":\"cast-page_image__Pyvw5\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getCastById } from '../../shared/services/movies-api';\nimport defautAvatar from '../../shared/images/default-avatar.jpg';\nimport styles from './cast-page.module.css';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCastById(id);\n        setCast(data);\n      } catch ({ response }) {\n        Notify.failure(response.data.status_message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const items = cast.map(({ id, profile_path, name, character }) => {\n    return (\n      <li key={id} className={styles.item}>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n              : defautAvatar\n          }\n          alt={name}\n          className={styles.image}\n        />\n        <p>Name: {name}</p>\n        <p>Character: {character}</p>\n      </li>\n    );\n  });\n\n  return (\n    <div className={styles.container}>\n      <h3 className={styles.title}>The cast of the film:</h3>\n      <ul className={styles.list}>{items}</ul>\n    </div>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst KEY = 'f382609d477ce9aec3e1d07c01aab879';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const getReviewsById = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchCast","getCastById","data","response","Notify","status_message","items","map","profile_path","name","character","className","styles","src","defautAvatar","alt","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getMovieById","getMoviesByQuery","query","page","getReviewsById","results"],"sourceRoot":""}