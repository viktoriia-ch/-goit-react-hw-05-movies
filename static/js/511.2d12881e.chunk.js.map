{"version":3,"file":"static/js/511.2d12881e.chunk.js","mappings":"sQACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA4F,4BAA5F,EAAkI,8B,SCsClI,EAhCoB,WAClB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEKC,EAAAA,EAAAA,IAAeJ,GAFpB,OAEXK,EAFW,OAGjBN,EAAWM,GAHM,gDAIRC,EAJQ,KAIRA,SACTC,EAAAA,OAAAA,QAAeD,EAASE,KAAKC,gBALZ,yDAAH,qDAQlBN,GACD,GAAE,CAACH,IAEJ,IAAMU,EAAQZ,EAAQa,KAAI,YAA8B,IAA3BX,EAA0B,EAA1BA,GAAIY,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvC,OACE,gBAAaC,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,qBAAsCH,MACtC,uBAAIC,MAFGb,EAKZ,IAED,OAAOU,EAAMM,QACX,eAAIF,UAAWC,EAAf,SAA6BL,KAE7B,cAAGI,UAAWC,EAAd,4BAEH,C,wLClCKE,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAJQ,mCAKRC,SAAU,WAIDC,EAAiB,mCAAG,sGACRN,EAASO,IAAI,wBADL,uBACvBhB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBiB,EAAY,mCAAG,WAAMzB,GAAN,yFACHiB,EAASO,IAAT,iBAAuBxB,IADpB,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZkB,EAAgB,mCAAG,WAAMC,GAAN,yFACPV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAAA,EACAC,KAAM,KAJoB,uBACtBpB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBqB,EAAW,mCAAG,WAAM7B,GAAN,yFAGfiB,EAASO,IAAT,iBAAuBxB,EAAvB,aAHe,uBAEf8B,EAFe,EAEvBtB,KAAQsB,KAFe,kBAIlBA,GAJkB,2CAAH,sDAOX1B,EAAc,mCAAG,WAAMJ,GAAN,yFAGlBiB,EAASO,IAAT,iBAAuBxB,EAAvB,aAHkB,uBAElBK,EAFkB,EAE1BG,KAAQH,QAFkB,kBAIrBA,GAJqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/ReviewsPage/reviews-page.module.css?0ad5","pages/ReviewsPage/ReviewsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews-page_list__4PG2C\",\"item\":\"reviews-page_item__yYLX5\",\"title\":\"reviews-page_title__gnwgI\",\"comment\":\"reviews-page_comment__0tLEM\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getReviewsById } from '../../shared/services/movies-api';\n\nimport styles from './reviews-page.module.css';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const results = await getReviewsById(id);\n        setReviews(results);\n      } catch ({ response }) {\n        Notify.failure(response.data.status_message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const items = reviews.map(({ id, author, content }) => {\n    return (\n      <li key={id} className={styles.item}>\n        <h4 className={styles.title}>Author: {author}</h4>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return items.length ? (\n    <ul className={styles.list}>{items}</ul>\n  ) : (\n    <p className={styles.comment}>Not reviews yet</p>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst KEY = 'f382609d477ce9aec3e1d07c01aab879';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const getReviewsById = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","getReviewsById","results","response","Notify","data","status_message","items","map","author","content","className","styles","length","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getMovieById","getMoviesByQuery","query","page","getCastById","cast"],"sourceRoot":""}